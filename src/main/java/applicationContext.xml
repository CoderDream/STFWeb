<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/tx    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/aop   http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	default-autowire="byName">

	<!-- support spring annotation -->
	<context:annotation-config />

	<bean id="databaseConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:database.properties</value>
			</list>
		</property>
	</bean>

	<import resource="classpath*:datasource.xml" />

<!-- 为UserDao注入 DataSource -->
<bean id="userDao" class="com.hp.stf.ss3.dao.UserDaoImpl">
	<property name="dataSource" ref="dataSource"></property>
</bean>
<!-- 为UserService注入userDao -->
<bean id="userService" class="com.hp.stf.ss3.service.UserServiceImpl">
	<property name="userDao" ref="userDao"></property>
</bean>

<!-- 为resourceDao注入DataSource -->
<bean id="functionDao" class="com.hp.stf.ss3.dao.FunctionDaoImpl">
	<property name="dataSource" ref="dataSource"></property>
</bean>
<!-- 为resourceService注入resourceDao -->
<bean id="functionService" class="com.hp.stf.ss3.service.FunctionServiceImpl"
	init-method="init">
	<property name="functionDao" ref="functionDao"></property>
</bean>


	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="find*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="query*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" rollback-for="java.lang.Throwable" />
		</tx:attributes>
	</tx:advice>

	<!-- format: execution(modifiers-pattern? ret-type-pattern declaring-type-pattern? 
		name-pattern(param-pattern) throws-pattern?) -->

	<aop:config proxy-target-class="false">
		<aop:pointcut id="txPointcut"
			expression="execution(* com.hp.stf.module.service..*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />
	</aop:config>

	<bean id="loggerInterceptor" class="com.hp.stf.module.utils.interceptor.LoggerInterceptor" />
	<aop:config proxy-target-class="true">
		<aop:aspect id="loggerAspect" ref="loggerInterceptor">
			<aop:pointcut id="logPointcut"
				expression="execution(* com.hp.stf.module..*.*(..))" />
			<aop:before pointcut-ref="logPointcut" method="startInvoke" />
			<aop:after pointcut-ref="logPointcut" method="endInvoke" />
		</aop:aspect>
	</aop:config>

	<import resource="classpath*:/com/hp/stf/*/**/applicationContext.xml" />
</beans>